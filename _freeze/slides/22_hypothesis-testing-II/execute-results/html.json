{
  "hash": "cc755c036c7e28bba7ec38ac3ab29c95",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"MATH167R: Hypothesis Testing\"\nauthor: \"Peter Gao\"\nformat: \n  revealjs:\n    theme: [./slides.scss, ../theme.scss]\neditor: visual\n---\n\n\n\n\n\n\n## Overview of today\n\n-   Review of basic hypothesis tests\n-   Designing your own hypothesis test\n-   Permutation tests\n\n## Summary: hypothesis testing\n\n1.  Define null and alternative hypotheses.\n\n    -   ex. $H_0:\\mu = 0$ and $H_a:\\mu\\neq 0$\n\n2.  Compute a test statistic for which the null sampling distribution is known (based on assumptions about the population/sample).\n\n    -   ex. $T=(\\overline{X}_n-\\mu)/(S^2/\\sqrt{n})\\sim t_{n-1}$\n\n3.  Compare the test statistic with the null distribution to obtain a P-value.\n\n    -   ex. $P(|T|>|t|)$ where $t$ is the observed test statistic.\n\n## Example: Two-sample $z$-test\n\n**Assumptions**:\n\n1.  $X_1, \\ldots, X_m$ is a random sample from a distribution with mean $\\mu_1$ and variance $\\sigma_1^2$.\n2.  $Y_1, \\ldots, Y_n$ is a random sample from a distribution with mean $\\mu_2$ and variance $\\sigma_2^2$.\n3.  The $X$ and $Y$ samples are independent of one another.\n4.  The sample sizes are adequately large (usually appropriate if $m>40$ and $n>40$.\n\n## Example: Two-sample $z$-test\n\n**Hypotheses**:\n\n-   H_0: $\\mu_1=\\mu_2$\n-   H_a: $\\mu_1\\not=\\mu_2$\n\n## Example: Two-sample $z$-test\n\nUnder these assumptions, $\\overline{X}-\\overline{Y}$ is approximately normal and the test statistic $$Z=\\frac{\\overline{X}-\\overline{Y}-(\\mu_1-\\mu_2)}{\\sqrt{\\frac{S_1^2}{m}+\\frac{S_2^2}{n}}}$$ has approximately a standard normal distribution when $H_0$ is true.\n\n## Example: Two-sample $t$-test\n\nWhen the samples are small, but the population distributions are approximately normal, the standardized test statistic $$T=\\frac{\\overline{X}-\\overline{Y}-(\\mu_1-\\mu_2)}{\\sqrt{\\frac{S_1^2}{m}+\\frac{S_2^2}{n}}}$$ has approximately a $t$ distribution with df $v$ estimated from the data by\n\n$$\\nu =\\frac{\\left(\\frac{s_1^2}{m}+\\frac{s_2^2}{n}\\right)^2}{\\frac{(s_1^2/m)^2}{m-1}+\\frac{(s_2^2/n)^2}{n-1}}$$\n\n## Example: Two-sample $t$-test\n\nWe can use the `sleep` data in R, which contains Student's example data on the effect of two sleeping drugs on 10 patients, to test out the `t.test()` function.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt.test(extra ~ group, data = sleep)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tWelch Two Sample t-test\n\ndata:  extra by group\nt = -1.8608, df = 17.776, p-value = 0.07939\nalternative hypothesis: true difference in means between group 1 and group 2 is not equal to 0\n95 percent confidence interval:\n -3.3654832  0.2054832\nsample estimates:\nmean in group 1 mean in group 2 \n           0.75            2.33 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n## \"There is only one test\"\n\n![Image by [Allen Downey](https://allendowney.github.io/ElementsOfDataScience/13_hypothesis.html)](images/hypothesis_testing.png){fig-alt=\"Flowchart demonstrating data to observed effect δ* with simulated data and p-value distribution under H0.\"}\n\n## \"There is only one test\": Tim and Bob\n\n![[Lea et al. (2007)](https://link.springer.com/article/10.3758/BF03194119)](images/tim_bob.png){fig-alt=\"Black and white headshots of two men, one with curly hair and a goatee, the other bald with a goatee.\"}\n\n## \"There is only one test\": Tim and Bob\n\n![Image by [Allen Downey](https://allendowney.github.io/ElementsOfDataScience/13_hypothesis.html)](images/hypothesis_testing.png){fig-align=\"right\" width=\"20\"}\n\nWhat is the data? Test statistic? Model of $H_0$? P-value?\n\n## Designing your own hypothesis test\n\n\\small\n\nSuppose we have five sequences of 200 coin flips.\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  A     B     C     D     E    \n  <chr> <chr> <chr> <chr> <chr>\n1 T     H     H     T     H    \n2 H     H     H     H     H    \n3 T     H     T     H     H    \n4 H     T     H     H     H    \n5 H     T     T     H     T    \n6 T     H     T     T     H    \n```\n\n\n:::\n:::\n\n\n\n\n\n\nOnly one sequence is generated by flipping a fair coin, using the code `sample(c(\"H\", \"T\"), 200, replace = T)`.\n\nCan we design a hypothesis test to help us identify the true sequence?\n\nThis activity adapted from a blog post from [Alex Hayes](https://www.alexpghayes.com/post/2022-11-02-hypothesis-testing-by-example).\n\n## Designing your own hypothesis test\n\nFirst, load the flips using the following code.\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nflips <- read_csv(\"https://math167r-s24.github.io/static/flips.csv\")\nhead(flips)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  A     B     C     D     E    \n  <chr> <chr> <chr> <chr> <chr>\n1 T     H     H     T     H    \n2 H     H     H     H     H    \n3 T     H     T     H     H    \n4 H     T     H     H     H    \n5 H     T     T     H     T    \n6 T     H     T     T     H    \n```\n\n\n:::\n:::\n\n\n\n\n\n\nCan you tell which is real and which are fake?\n\n## Visual inspection\n\n\n\n\n\n\n::: {.cell layout-align=\"A composite chart with five horizontal strips labeled A to E, each showing zigzag patterns of teal and red circles.\"}\n::: {.cell-output-display}\n![](22_hypothesis-testing-II_files/figure-html/visualize_flips-1.png){fig-align='A composite chart with five horizontal strips labeled A to E, each showing zigzag patterns of teal and red circles.' width=100%}\n:::\n:::\n\n\n\n\n\n\n## Visual inspection\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nflips_long <- flips |>\n  mutate(id = 1:200) |>\n  pivot_longer(-id,  names_to = \"Sequence\", values_to = \"Flip\")\n\nflips_long |> \n  ggplot(aes(x = id, y = Flip, group = Sequence)) +\n  geom_line() +\n  geom_point(aes(color = Flip)) +\n  facet_grid(rows = vars(Sequence)) + \n  theme(\n    legend.position = \"none\",\n    axis.title = element_blank()\n  )\n```\n:::\n\n\n\n\n\n\n## A simple test: Counting the number of heads\n\nWe can use the test we discussed last class for a sample proportion:\n\n\n\n\n\n\n```{=tex}\n\\begin{align}\nH_0: p&=1/2\\\\\nH_a: p&\\neq 1/2\n\\end{align}\n```\n\n\n\n\n\nwhere we **assume** that the flips $X_1,...,X_n$ are iid $X_i \\stackrel{iid}{\\sim} \\mathrm{Binomial}(1, p)$ with probability of heads $p$.\n\n## A simple test: Counting the number of heads\n\nWhat are the test statistics for each of our sequences? One option is to use the total number of heads.\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  Sequence nHeads\n  <chr>     <int>\n1 A           100\n2 B           108\n3 C           114\n4 D           101\n5 E            98\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## A simple test: Counting the number of heads\n\nDo any of these indicate that certain sequences are fake? How could we get corresponding P-values?\n\n**Approach one**: Use the normal approximation: $$\\widehat{p}\\sim N\\left(p, \\sqrt{\\frac{p(1-p)}{n}}\\right)$$\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nphats <- flips_long |>\n  group_by(Sequence) |>\n  summarize(phat = mean(Flip == \"H\"))\n# two-sided p-values\n(1 - pnorm(abs(phats$phat - .5), sd = sqrt(.5 * .5 / 200))) * 2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.00000000 0.25789904 0.04771488 0.88753708 0.77729741\n```\n\n\n:::\n:::\n\n\n\n\n\n\nThis suggests that sequence C has too many heads.\n\n## A simple test: Counting the number of heads\n\n**Approach two**: Use simulations to estimate the distribution of number of heads **under the null**:\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](22_hypothesis-testing-II_files/figure-html/Pvalues_sim-1.png){fig-align='center' fig-alt='Histogram showing the distribution of the number of heads with five colored vertical lines (A-red, B-green, C-blue, D-yellow, E-pink).' width=100%}\n:::\n:::\n\n\n\n\n\n\n## A simple test: Counting the number of heads\n\n**Approach two**: Use simulations to estimate the distribution of number of heads **under the null**:\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsim_totals <- data.frame(x = rbinom(30000, 200, .5))\nflip_totals <- flips_long |>\n  group_by(Sequence) |>\n  summarize(nHeads = sum(Flip == \"H\"))\nggplot() +\n  geom_histogram(data = sim_totals, aes(x = x)) +\n  geom_vline(data = flip_totals, aes(color = Sequence, xintercept = nHeads)) +\n  xlab(\"Number of heads\")\n```\n:::\n\n\n\n\n\n\n## A simple test: Counting the number of heads\n\n**Approach two**: Use simulations to estimate the distribution of number of heads **under the null**:\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np_vals <- sapply(flip_totals$nHeads,\n                 function(x) mean(abs(sim_totals - 100) >= (x - 100)))\np_vals\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.00000000 0.29033333 0.05516667 0.94340000 1.00000000\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## A slightly different test: streak length\n\nWe can also consider a different test statistic: longest streak.\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nflip_streaks <- flips_long |>\n  group_by(Sequence) |>\n  summarize(longest_streak = max(rle(Flip)$length))\nflip_streaks\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  Sequence longest_streak\n  <chr>             <int>\n1 A                     2\n2 B                    14\n3 C                     9\n4 D                     8\n5 E                     6\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## A slightly different test: streak length\n\nWe can then simulate the null distribution of streak length.\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsim_streaks <- \n  data.frame(\n    x = replicate(10000, \n                  max(rle(sample(c(\"H\", \"T\"), size = 200, replace = T))$length)\n    )\n  )\nggplot() +\n  geom_histogram(data = sim_streaks, aes(x = x), binwidth = 1) +\n  geom_vline(data = flip_streaks,\n             aes(color = Sequence, xintercept = longest_streak)) +\n  xlab(\"Longest streak\")\n```\n:::\n\n\n\n\n\n\n## A slightly different test: streak length\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](22_hypothesis-testing-II_files/figure-html/streaks_sim-1.png){fig-align='center' fig-alt='Bar chart showing distribution of longest streak counts, with red, green, blue, yellow, and purple vertical lines indicating sequences A, B, C, D, and E.' width=100%}\n:::\n:::\n\n\n\n\n\n\n## A slightly different test: streak length\n\nNote that calculating the P-value is tricky here--a one-sided test may make the most sense.\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np_vals <- sapply(flip_streaks$longest_streak,\n                 function (x) mean(sim_streaks$x > x))\np_vals\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.0000 0.0054 0.1769 0.3216 0.8019\n```\n\n\n:::\n:::\n\n\n\n\n\n\nThis suggests that the longest streaks are too long for sequence B. Note that we could try other test statistics. What about average streak length?\n\n## Designing your own hypothesis test\n\n1.  Come up with your own test statistic.\n2.  Simulate the null distribution of your test statistic.\n3.  Can you identify which sequence is the real one?\n\n## P-Hacking: Designing a test after seeing the data\n\nIn principle, we should decide which test to use **before** seeing the data. Why?\n\nI could use the following test statistic: number of times the exact sequence $D$ is obtained. What is the P-value for each sequence?\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::knit_exit()\n```\n:::\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}